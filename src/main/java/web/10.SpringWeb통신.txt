[1] HTTP : 하이퍼텍스트 통신 규약
    - 상태가 무상재 프로토콜 이다.
    - 독립적이다 , 데이터 주고 받기 위한 각각의 데이터 요청과 응답
    - HTTP1.1 ( 주로 사용되는 버전 )
    - 경로 : 통신할 웹 자원 위치
        http://localhost:8080/board/view?bno=3
        1. URL : 웹 주소 , 네트워크 상의 리소스가 어디에 있는지 알려주는 규약
            http://localhost:8080/board/view
        2. URI : 각종 정보들의 유일한 이름이나 위치를 표시하는 규약
            *쿼리스트링 방식  : http://localhost:8080/board/view?bno=3
            경로매개변수 방식 : http://localhost:8080/board/view/3
            내부위치이동 방식 : http://localhost:8080/board/view#id명

    - HTTPS : HTTP의 보안이 강화된 버전이다.
        - 통신의 인증과 암호화를 위해 만들어진 프로토콜
        - 인증서 발급 업체로 부터 인증서 발급 받는다. ex) 건강보험 , 자동차보험
        - 해당 웹페이지에서 문제 발생시 보상해주는 보험 같은 개념

[1-1] HTTP Header ( HTTP 통신 정보 )
        1. host : 요청이 전송되는 타켓의 url 주소 , 해당 자원을 가지고 있는 주인 , 웹서버 주소
        2. contentType : 요청 과 응답 보내는 데이터의 type 타입 정보
        3. body : 데이터 본문
            - POST, PUT 사용가능 , GET, DELETE 사용불가능

[1-2] HTTP METHOD
    1. GET      : REST API 에서는 주로 자원 호출 요청 [ R ]
    2. POST     : REST API 에서는 주로 자원 저장 요청 [ C ]
    3. PUT      : REST API 에서는 주로 자원 수정 요청 [ U ]
    4. DELETE   : REST API 에서는 주로 자원 삭제 요청 [ D ]

* 데이터 와 타입
    - 데이터/자료 : 순수한 정보
    - 타입 : 정보의 분류 , 자료 의 식별 , 자원의 사용시 해당 자원의 사용방법를 정의
        - JAVA : String타입 -> "3"  , int타입 -> 3 , byte타입 -> 3

* REST API : URL 이용한 자원의 상태를 주고 받는 구조/아키텍처

* 쿼리스트링 과 BODY
    - 편지봉투 : 보낸 사람 , 받는 사람
    - 편지지 : 내용물
    ex1 ] POST , BODY O
        편지봉투 : 받는 사람 : http://localhost:8080/board/view
        편지지 : { bno : 3 }
    ex2 ] GET , BODY X
        편지봉투 : 받는 사람 : http://localhost:8080/board/view?bno=3
        편지지 : x
    - 쿼리스트링 : URL 상의 자원의정보가 노출이 된다. ( 보안X )
    - BODY : URL 상의 자원의정보가 노출이 안된다. ( 보안O ) , 개인정보 존재하는 데이터는 POST,PUT 사용한다.










